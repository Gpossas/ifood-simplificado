name: "Ifood simplificado CI/CD"

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      aws_assume_role_arn:
        required: true
      aws_s3_terraform_backend:
        required: true
      aws_region:
        required: true
      docker_access_token:
        required: true

jobs:
  build_application_image:
    name: Build application image
    runs-on: ubuntu-latest
    steps:
      - name: Clone code from GitHub repository inside GitHub actions runner
        uses: actions/checkout@v4

      - name: Set up jdk 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws_assume_role_arn }}
          aws-region: ${{ secrets.aws_region }}

      - name: Run Tests and Build jar File For Orders Microservice
        run: cd orders_microservice && mvn clean install

      - name: Push image to Docker Hub For Orders Microservice
        run: |
          cd orders_microservice
          echo ${{ secrets.docker_access_token }} | docker login -u ${{ vars.DOCKER_USERNAME }} --password-stdin
          docker build --platform linux/arm64 -t ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME_ORDERS_MICROSERVICE }}:latest .
          docker push ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME_ORDERS_MICROSERVICE }}:latest

      - name: Run Tests and Build jar File For Restaurant Microservice
        run: cd restaurant_microservice && mvn clean install

      - name: Push image to Docker Hub For Restaurant Microservice
        run: |
          cd restaurant_microservice
          echo ${{ secrets.docker_access_token }} | docker login -u ${{ vars.DOCKER_USERNAME }} --password-stdin
          docker build --platform linux/arm64 -t ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME_RESTAURANT_MICROSERVICE }}:latest .
          docker push ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME_RESTAURANT_MICROSERVICE }}:latest

  build_aws_terraform:
    name: Build AWS Infrastructure With Terraform
    needs: build_application_image
    runs-on: ubuntu-latest
    steps:
      - name: Clone code from GitHub repository inside GitHub actions runner
        uses: actions/checkout@v4

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws_assume_role_arn }}
          aws-region: ${{ secrets.aws_region }}

      - name: Authenticate to Docker Hub
        run: echo ${{ secrets.docker_access_token }} | docker login -u ${{ vars.DOCKER_USERNAME }} --password-stdin

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.0

      - name: Terraform Init
        run: bash terraform/scripts/terraform_init.sh
        env:
          ENV: ${{ inputs.environment }}
          AWS_S3_TERRAFORM_BACKEND: ${{ secrets.aws_s3_terraform_backend }}
          AWS_REGION: ${{ secrets.aws_region }}

      - name: Terraform Validate
        run: bash terraform/scripts/terraform_validate.sh
        env:
          ENV: ${{ inputs.environment }}

      - name: Terraform Apply
        run: bash terraform/scripts/terraform_apply.sh
        env:
          ENV: ${{ inputs.environment }}
          ORDERS_IMAGE: ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME_ORDERS_MICROSERVICE }}:latest
          RESTAURANT_IMAGE: ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME_RESTAURANT_MICROSERVICE }}:latest